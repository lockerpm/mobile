// source: migration-payload.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.MigrationPayload', null, global);
goog.exportSymbol('proto.MigrationPayload.Algorithm', null, global);
goog.exportSymbol('proto.MigrationPayload.DigitCount', null, global);
goog.exportSymbol('proto.MigrationPayload.OtpParameters', null, global);
goog.exportSymbol('proto.MigrationPayload.OtpType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MigrationPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MigrationPayload.repeatedFields_, null);
};
goog.inherits(proto.MigrationPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MigrationPayload.displayName = 'proto.MigrationPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MigrationPayload.OtpParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MigrationPayload.OtpParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MigrationPayload.OtpParameters.displayName = 'proto.MigrationPayload.OtpParameters';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MigrationPayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MigrationPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.MigrationPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MigrationPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MigrationPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    otpParametersList: jspb.Message.toObjectList(msg.getOtpParametersList(),
    proto.MigrationPayload.OtpParameters.toObject, includeInstance),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    batchSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    batchIndex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    batchId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MigrationPayload}
 */
proto.MigrationPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MigrationPayload;
  return proto.MigrationPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MigrationPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MigrationPayload}
 */
proto.MigrationPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MigrationPayload.OtpParameters;
      reader.readMessage(value,proto.MigrationPayload.OtpParameters.deserializeBinaryFromReader);
      msg.addOtpParameters(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchIndex(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MigrationPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MigrationPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MigrationPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MigrationPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOtpParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MigrationPayload.OtpParameters.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBatchSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBatchIndex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBatchId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MigrationPayload.Algorithm = {
  ALGORITHM_UNSPECIFIED: 0,
  ALGORITHM_SHA1: 1,
  ALGORITHM_SHA256: 2,
  ALGORITHM_SHA512: 3,
  ALGORITHM_MD5: 4
};

/**
 * @enum {number}
 */
proto.MigrationPayload.DigitCount = {
  DIGIT_COUNT_UNSPECIFIED: 0,
  DIGIT_COUNT_SIX: 1,
  DIGIT_COUNT_EIGHT: 2
};

/**
 * @enum {number}
 */
proto.MigrationPayload.OtpType = {
  OTP_TYPE_UNSPECIFIED: 0,
  OTP_TYPE_HOTP: 1,
  OTP_TYPE_TOTP: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MigrationPayload.OtpParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.MigrationPayload.OtpParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MigrationPayload.OtpParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MigrationPayload.OtpParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: msg.getSecret_asB64(),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    algorithm: jspb.Message.getFieldWithDefault(msg, 4, 0),
    digits: jspb.Message.getFieldWithDefault(msg, 5, 0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    counter: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MigrationPayload.OtpParameters}
 */
proto.MigrationPayload.OtpParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MigrationPayload.OtpParameters;
  return proto.MigrationPayload.OtpParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MigrationPayload.OtpParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MigrationPayload.OtpParameters}
 */
proto.MigrationPayload.OtpParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSecret(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 4:
      var value = /** @type {!proto.MigrationPayload.Algorithm} */ (reader.readEnum());
      msg.setAlgorithm(value);
      break;
    case 5:
      var value = /** @type {!proto.MigrationPayload.DigitCount} */ (reader.readEnum());
      msg.setDigits(value);
      break;
    case 6:
      var value = /** @type {!proto.MigrationPayload.OtpType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MigrationPayload.OtpParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MigrationPayload.OtpParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MigrationPayload.OtpParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MigrationPayload.OtpParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAlgorithm();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getDigits();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCounter();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional bytes secret = 1;
 * @return {!(string|Uint8Array)}
 */
proto.MigrationPayload.OtpParameters.prototype.getSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes secret = 1;
 * This is a type-conversion wrapper around `getSecret()`
 * @return {string}
 */
proto.MigrationPayload.OtpParameters.prototype.getSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSecret()));
};


/**
 * optional bytes secret = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSecret()`
 * @return {!Uint8Array}
 */
proto.MigrationPayload.OtpParameters.prototype.getSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setSecret = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.MigrationPayload.OtpParameters.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string issuer = 3;
 * @return {string}
 */
proto.MigrationPayload.OtpParameters.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Algorithm algorithm = 4;
 * @return {!proto.MigrationPayload.Algorithm}
 */
proto.MigrationPayload.OtpParameters.prototype.getAlgorithm = function() {
  return /** @type {!proto.MigrationPayload.Algorithm} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.MigrationPayload.Algorithm} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setAlgorithm = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional DigitCount digits = 5;
 * @return {!proto.MigrationPayload.DigitCount}
 */
proto.MigrationPayload.OtpParameters.prototype.getDigits = function() {
  return /** @type {!proto.MigrationPayload.DigitCount} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.MigrationPayload.DigitCount} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setDigits = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional OtpType type = 6;
 * @return {!proto.MigrationPayload.OtpType}
 */
proto.MigrationPayload.OtpParameters.prototype.getType = function() {
  return /** @type {!proto.MigrationPayload.OtpType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.MigrationPayload.OtpType} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int64 counter = 7;
 * @return {number}
 */
proto.MigrationPayload.OtpParameters.prototype.getCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.MigrationPayload.OtpParameters} returns this
 */
proto.MigrationPayload.OtpParameters.prototype.setCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated OtpParameters otp_parameters = 1;
 * @return {!Array<!proto.MigrationPayload.OtpParameters>}
 */
proto.MigrationPayload.prototype.getOtpParametersList = function() {
  return /** @type{!Array<!proto.MigrationPayload.OtpParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MigrationPayload.OtpParameters, 1));
};


/**
 * @param {!Array<!proto.MigrationPayload.OtpParameters>} value
 * @return {!proto.MigrationPayload} returns this
*/
proto.MigrationPayload.prototype.setOtpParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MigrationPayload.OtpParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MigrationPayload.OtpParameters}
 */
proto.MigrationPayload.prototype.addOtpParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MigrationPayload.OtpParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MigrationPayload} returns this
 */
proto.MigrationPayload.prototype.clearOtpParametersList = function() {
  return this.setOtpParametersList([]);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.MigrationPayload.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.MigrationPayload} returns this
 */
proto.MigrationPayload.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 batch_size = 3;
 * @return {number}
 */
proto.MigrationPayload.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.MigrationPayload} returns this
 */
proto.MigrationPayload.prototype.setBatchSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 batch_index = 4;
 * @return {number}
 */
proto.MigrationPayload.prototype.getBatchIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.MigrationPayload} returns this
 */
proto.MigrationPayload.prototype.setBatchIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 batch_id = 5;
 * @return {number}
 */
proto.MigrationPayload.prototype.getBatchId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.MigrationPayload} returns this
 */
proto.MigrationPayload.prototype.setBatchId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto);
